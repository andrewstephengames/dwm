--- config.def.h
+++ config.def.h
@@ -46,11 +46,11 @@ static const Layout layouts[] = {
 
 /* key definitions */
 #define MODKEY Mod1Mask
-#define TAGKEYS(KEY,TAG) \
-	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
-	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
-	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
-	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
+#define TAGKEYS(KEY,TAG)												\
+	&((Keychord){1, {{MODKEY, KEY}},								view,           {.ui = 1 << TAG} }), \
+		&((Keychord){1, {{MODKEY|ControlMask, KEY}},					toggleview,     {.ui = 1 << TAG} }), \
+		&((Keychord){1, {{MODKEY|ShiftMask, KEY}},						tag,            {.ui = 1 << TAG} }), \
+		&((Keychord){1, {{MODKEY|ControlMask|ShiftMask, KEY}},			toggletag,      {.ui = 1 << TAG} }),
 
 /* helper for spawning shell commands in the pre dwm-5.0 fashion */
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
@@ -60,31 +60,32 @@ static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn()
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
-static Key keys[] = {
-	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+static Keychord *keychords[] = {
+	/* Keys        function        argument */
+	&((Keychord){1, {{MODKEY, XK_p}},							spawn,          {.v = dmenucmd } }),
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_Return}},			spawn,          {.v = termcmd } }),
+	&((Keychord){2, {{MODKEY, XK_e}, {MODKEY, XK_e}},			spawn,          {.v = termcmd } }),
+	&((Keychord){1, {{MODKEY, XK_b}},							togglebar,      {0} }),
+	&((Keychord){1, {{MODKEY, XK_j}},							focusstack,     {.i = +1 } }),
+	&((Keychord){1, {{MODKEY, XK_k}},							focusstack,     {.i = -1 } }),
+	&((Keychord){1, {{MODKEY, XK_i}},							incnmaster,     {.i = +1 } }),
+	&((Keychord){1, {{MODKEY, XK_d}},							incnmaster,     {.i = -1 } }),
+	&((Keychord){1, {{MODKEY, XK_h}},							setmfact,       {.f = -0.05} }),
+	&((Keychord){1, {{MODKEY, XK_l}},							setmfact,       {.f = +0.05} }),
+	&((Keychord){1, {{MODKEY, XK_Return}},						zoom,           {0} }),
+	&((Keychord){1, {{MODKEY, XK_Tab}},							view,           {0} }),
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_c}},					killclient,     {0} }),
+	&((Keychord){1, {{MODKEY, XK_t}},							setlayout,      {.v = &layouts[0]} }),
+	&((Keychord){1, {{MODKEY, XK_f}},							setlayout,      {.v = &layouts[1]} }),
+	&((Keychord){1, {{MODKEY, XK_m}},							setlayout,      {.v = &layouts[2]} }),
+	&((Keychord){1, {{MODKEY, XK_space}},						setlayout,      {0} }),
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_space}},				togglefloating, {0} }),
+	&((Keychord){1, {{MODKEY, XK_0}},							view,           {.ui = ~0 } }),
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_0}},					tag,            {.ui = ~0 } }),
+	&((Keychord){1, {{MODKEY, XK_comma}},						focusmon,       {.i = -1 } }),
+	&((Keychord){1, {{MODKEY, XK_period}},						focusmon,       {.i = +1 } }),
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_comma}},				tagmon,         {.i = -1 } }),
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_period}},			tagmon,         {.i = +1 } }),
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
@@ -94,7 +95,7 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	&((Keychord){1, {{MODKEY|ShiftMask, XK_q}},					quit,           {0} }),
 };
 
 /* button definitions */
